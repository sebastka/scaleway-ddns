#!/bin/sh
set -e    # Abort upon error
set -u    # Abort upon udefined variable
#set -x   # Print every command
#set -o pipefail # Prevents errors in a pipeline from being masked (not supported by dash yet)

readonly path="$(dirname -- "$(readlink -f -- "$0")")"

#######################################
#   Description:
#     Update DNS records on Scaleway
#   Usage:
#     ./scaleway-ddns
#   Arguments:
#    None!
#   Returns:
#     0 upon success
#     >=1 upon error
#######################################
main() {
  # Check if $USAGE is respected
  readonly USAGE='Usage: ./scaleway-ddns'
  [ "$#" -ne 0 ] && err "Error: 0 argument(s) expected, $# received" && err "$USAGE" && return 1

  readonly api_endpoint="https://api.scaleway.com/domain/v2beta1/dns-zones"

  find "$path" -maxdepth 1 -name '*.env' | while read f; do
    set -a; . "$f"; set +a

    [ -z "$SCALEWAYDDNS_RECORD_NAME" ] \
      && DOMAIN="$SCALEWAYDDNS_DOMAIN_NAME" \
      || DOMAIN="$SCALEWAYDDNS_RECORD_NAME.$SCALEWAYDDNS_DOMAIN_NAME"

    printf '%s: Fetching record id...\n' "$DOMAIN"
    export SCALEWAYDDNS_RECORD_ID="$(get_record_id)"

    if [ -z "$SCALEWAYDDNS_RECORD_ID" ]; then
      printf '%s: Record not found (%s).\n' "$DOMAIN" "$SCALEWAYDDNS_RECORD_ID"
      continue
    fi

    printf '%s: Updating record...\n' "$DOMAIN"
    record_update > /dev/null

    printf '%s: Updated.\n' "$DOMAIN"
  done
}

# Send API call to fetch record ID
get_record_id() {
  curl \
    -s "$api_endpoint/$SCALEWAYDDNS_DOMAIN_NAME/records" \
    -X GET -G -H "X-Auth-Token: $SCALEWAYDDNS_SECRET_KEY" \
    -d "type=$SCALEWAYDDNS_RECORD_TYPE" \
    | jq -r ".records | map(select(.name == \"$SCALEWAYDDNS_RECORD_NAME\")) | .[].id"
}

# Create JSON object used to update the record
get_record_update_object() {
  echo "$json_obj" \
    | envsubst '$SCALEWAYDDNS_RECORD_ID,$SCALEWAYDDNS_RECORD_VALUE,$SCALEWAYDDNS_RECORD_NAME,$SCALEWAYDDNS_RECORD_TYPE'
}

# Send API call to update record
record_update() {
  record_update_object="$(get_record_update_object)"

  curl -s "$api_endpoint/$SCALEWAYDDNS_DOMAIN_NAME/records" \
    -X PATCH \
    -H 'Content-Type: application/json' \
    -H "X-Auth-Token: $SCALEWAYDDNS_SECRET_KEY" \
    -d "$record_update_object" \
    | jq
}

readonly json_obj='{
  "changes": [
  {
    "set": {
    "id": "${SCALEWAYDDNS_RECORD_ID}",
    "records": [
      {
      "data": "${SCALEWAYDDNS_RECORD_VALUE}",
      "name": "${SCALEWAYDDNS_RECORD_NAME}",
      "ttl": "3600",
      "type": "${SCALEWAYDDNS_RECORD_TYPE}"
      }
    ]
    }
  }
  ]
}
'

#######################################
#   Print error message to stderr
#   https://google.github.io/styleguide/shellguide.html
#######################################
err() { echo "[$(date +'%Y-%m-%dT%H:%M:%S%z')]: $*" >&2; }

main "$@"; exit

